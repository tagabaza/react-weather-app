{"version":3,"sources":["components/Forecast/Forecast.module.css","components/Header/Header.module.css","components/Form/Form.module.css","components/Page/Page.module.css","components/Error/Error.module.css","components/Loader/Loader.module.css","components/CurrentDay/CurrentDay.module.css","components/UpcomingDaysForecast/UpcomingDaysForecast.module.css","components/UpcomingDaysForecastItem/UpcomingDaysForecastItem.module.css","components/Header/index.js","components/Header/Header.jsx","components/Form/Form.jsx","components/Error/Error.jsx","components/Loader/Loader.jsx","components/CurrentDay/CurrentDay.jsx","components/UpcomingDaysForecastItem/UpcomingDaysForecastItem.jsx","components/UpcomingDaysForecast/UpcomingDaysForecast.jsx","components/CurrentDayDescriptionItem/CurrentDayDescriptionItem.jsx","components/CurrentDayDescription/CurrentDayDescription.jsx","components/Forecast/Forecast.jsx","helpers/getCurrentDayForecast.js","helpers/getCurrentDayDetailedForecast.js","helpers/getUpcomingDaysForecast.js","hooks/useForecast.js","components/Page/index.js","components/Page/Page.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","styles","heading","light","Form","submitSearch","useState","location","setLocation","onSubmit","e","preventDefault","type","placeholder","required","input","onChange","target","value","button","onClick","Error","message","error","role","defaultProps","Loader","box","version","id","xmlns","x","y","width","height","viewBox","fill","attributeType","attributeName","values","begin","dur","repeatCount","CurrentDay","weekday","date","temperature","weatherIcon","weatherDescription","cardInner","src","UpcomingDaysForecastItem","imgUrl","alt","UpcomingDaysForecast","days","weekList","map","day","key","CurrentDayDescriptionItem","name","unit","CurrentDayDescription","forecast","item","Forecast","Container","Row","tbRow","Col","xs","md","card","currentDay","currentDayDetails","upcomingDays","getCurrentDayForecast","data","title","moment","applicable_date","format","Math","round","the_temp","weather_state_abbr","weather_state_name","currentDayForecast","predictability","humidity","wind_speed","air_pressure","max_temp","min_temp","getUpcomingDaysForecast","slice","substring","REQUEST_URL","useForecast","isError","setError","isLoading","setLoading","setForecast","getWoeid","a","axios","params","query","length","getForecastData","woeid","submitRequest","response","console","log","collectForecastData","consolidated_weather","getCurrentDayDetailedForecast","Page","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bd5139b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Forecast_card__n_nZv\",\"box\":\"Forecast_box__1v5YN\",\"tbRow\":\"Forecast_tbRow__2Jg6I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Header_heading__sAf1D\",\"light\":\"Header_light__1p9Mt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Page_box__2nPNz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__1Ykqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Loader_box__XZ2hR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CurrentDay_card__2-yzD\",\"currentDayTitle\":\"CurrentDay_currentDayTitle__1gct3\",\"cardInner\":\"CurrentDay_cardInner__2lPAt\",\"weekday\":\"CurrentDay_weekday__2xnub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weekList\":\"UpcomingDaysForecast_weekList__3DYk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weekday\":\"UpcomingDaysForecastItem_weekday__quQBM\"};","import Header from './Header';\n\nexport default Header;","import React from 'react';\n\nimport styles from './Header.module.css'\n\nconst Header = () => (\n        <h1 className={styles.heading}>\n            <span className={styles.light}>Weather</span> Forecast\n        </h1>\n\n);\n \nexport default Header;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Form.module.css';\n\n\nconst Form = ({submitSearch}) => {\n    const [location, setLocation] = useState();\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(!location || location === '') return;\n        submitSearch(location);\n    }\n    return ( \n        <form onSubmit={onSubmit}>\n            <input \n                aria-label=\"location\"\n                type=\"text\"\n                placeholder=\"Search location\"\n                required\n                className={`${styles.input} form control`}\n                onChange={(e) => setLocation(e.target.value)}\n            />\n\n            <button type=\"submit\" className={styles.button} onClick={onSubmit}>SEARCH</button>\n        </form>\n     );\n};\n\nForm.propTypes = {\n    submitSearch: PropTypes.func.isRequired,\n};\n \nexport default Form;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Error.module.css';\n\nconst Error = ({ message }) => (\n    <div className={`${styles.error} alert position-absolute`} role=\"alert\">\n        {message}\n    </div>\n);\n\nError.propTypes = {\n    message: PropTypes.string,\n};\n\nError.defaultProps = {\n    message: 'An error occurred',\n};\n\nexport default Error;","import React from 'react';\n\nimport styles from './Loader.module.css';\n\nconst Loader = () => (\n    <div className={styles.box}>\n        <svg\n            version=\"1.1\"\n            id=\"Layer_1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"54px\"\n            height=\"60px\"\n            viewBox=\"0 0 24 30\"\n        >\n            <rect x=\"0\" y=\"0\" width=\"3\" height=\"10\" fill=\"#333\">\n                <animateTransform\n                    attributeType=\"xml\"\n                    attributeName=\"transform\"\n                    type=\"translate\"\n                    values=\"0 0; 0 20; 0 0\"\n                    begin=\"0\"\n                    dur=\"0.6s\"\n                    repeatCount=\"indefinite\"\n                />\n            </rect>\n            <rect x=\"10\" y=\"0\" width=\"3\" height=\"10\" fill=\"#333\">\n                <animateTransform\n                    attributeType=\"xml\"\n                    attributeName=\"transform\"\n                    type=\"translate\"\n                    values=\"0 0; 0 20; 0 0\"\n                    begin=\"0.2s\"\n                    dur=\"0.6s\"\n                    repeatCount=\"indefinite\"\n                />\n            </rect>\n            <rect x=\"20\" y=\"0\" width=\"3\" height=\"10\" fill=\"#333\">\n                <animateTransform\n                    attributeType=\"xml\"\n                    attributeName=\"transform\"\n                    type=\"translate\"\n                    values=\"0 0; 0 20; 0 0\"\n                    begin=\"0.4s\"\n                    dur=\"0.6s\"\n                    repeatCount=\"indefinite\"\n                />\n            </rect>\n        </svg>\n    </div>\n);\n\nexport default Loader;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport locationIcon from './assets/location-pin.png';\nimport styles from './CurrentDay.module.css';\n\nconst imgUrlBase = 'https://www.metaweather.com/static/';\n\n\nconst CurrentDay = ({weekday, date, location, temperature, weatherIcon, weatherDescription}) => (\n    <div className=\"d-flex\">\n        {/* <div className={styles.gradient}></div> */}\n        <div className={`${styles.cardInner} d-flex flex-column pt-5 pb-2`}>\n            <div className=\"mb-3\">\n                <h5 className=\"currentDayTitle\">{weekday} {date}</h5>\n                <h2 className=\"font-weight-bold mb-3 mt-3 text-center\">{location} ({temperature}°C)</h2>\n            </div>\n\n            <div className=\"col-xs-12 text-center mt-1\">\n                <img className=\"mb-3\" width=\"65\" src={weatherIcon} />\n                <h5 className=\"font-weight-lighter\">{weatherDescription}</h5>\n            </div>\n        </div>\n    </div>\n);\n\nCurrentDay.propTypes = {\n    weekday: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    temperature: PropTypes.number.isRequired,\n    weatherIcon: PropTypes.string.isRequired,\n    weatherDescription: PropTypes.string.isRequired\n\n}\n\nexport default CurrentDay;","\n   \nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './UpcomingDaysForecastItem.module.css';\n\nconst imgUrlBase = 'https://www.metaweather.com/static/';\n\nconst UpcomingDaysForecastItem = ({ weekday, temperature, imgUrl }) => (\n    <li className={`${styles.weekday} d-flex flex-column justify-content-center align-items-center p-2`}>\n        <img className=\"mb-2\" width=\"30\" src={`${imgUrlBase}img/weather/${imgUrl}.svg`} alt=\"\" />\n        <span className=\"mb-2\">{weekday}</span>\n        <span className=\"font-weight-bold\">{temperature}&deg;</span>\n    </li>\n);\n\nUpcomingDaysForecastItem.propTypes = {\n    weekday: PropTypes.string.isRequired,\n    temperature: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n};\n\nexport default UpcomingDaysForecastItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './UpcomingDaysForecast.module.css';\nimport UpcomingDaysForecastItem from '../UpcomingDaysForecastItem';\n\nconst UpcomingDaysForecast = ({days}) => (<ul className={`${styles.weekList} d-flex justify-content-between p-0 mx-auto`}>\n    {days.map(day => (\n            <UpcomingDaysForecastItem {...day} key={day.weekday} />\n        ))}\n</ul>);\n\nUpcomingDaysForecast.propTypes = {\n    days: PropTypes.array.isRequired,\n};\n\nexport default UpcomingDaysForecast;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CurrentDayDescriptionItem = ({ name, value, unit }) => (\n    <div className=\"d-flex justify-content-between\">\n        <p className=\"mb-4 font-weight-bolder text-uppercase\">{name}</p>\n        <p className=\"mb-0\">\n            {value} {unit}\n        </p>\n    </div>\n);\n\nCurrentDayDescriptionItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    unit: PropTypes.string.isRequired,\n};\n\nexport default CurrentDayDescriptionItem;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CurrentDayDescriptionItem from '../CurrentDayDescriptionItem';\n\nconst CurrentDayDescription = ({ forecast }) => (\n    <div className=\"mt-4 mt-md-2\">\n        <div className=\"d-flex flex-column mb-2\">\n            {forecast.map(item => (\n                <CurrentDayDescriptionItem {...item} key={item.name} />\n            ))}\n        </div>\n    </div>\n);\n\nCurrentDayDescription.propTypes = {\n    forecast: PropTypes.array,\n};\n\nexport default CurrentDayDescription;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport styles from './Forecast.module.css';\nimport CurrentDay from '../CurrentDay/CurrentDay';\nimport UpcomingDaysForecast from '../UpcomingDaysForecast/UpcomingDaysForecast';\nimport CurrentDayDescription from '../CurrentDayDescription/CurrentDayDescription';\n\nconst Forecast = ({forecast}) => (\n    <Container className={styles.box}>\n        <Row className={styles.tbRow}>\n            <Col xs={12} md={6}>\n                <div className={styles.card}>\n                    <CurrentDay {...forecast.currentDay} />\n                </div>\n            </Col>\n            <Col xs={12} md={6} className=\"mt-4 d-flex flex-column justify-content-between\">\n                <CurrentDayDescription forecast={forecast.currentDayDetails} />\n            </Col>\n        </Row>\n        <Row xs={12} className=\"mt-3\">\n                <UpcomingDaysForecast days={forecast.upcomingDays} />\n        </Row>\n    </Container>\n);\n\nForecast.propTypes = {\n    forecast: PropTypes.shape({\n        currentDay: PropTypes.object, \n        currentDayDetails: PropTypes.array, \n        upcomingDays: PropTypes.array\n    })\n    \n}\n\nexport default Forecast;","import moment from \"moment\";\n\nconst getCurrentDayForecast = (data, title) => ({\n    weekday: moment(data.applicable_date).format('dddd'),\n    date: moment(data.applicable_date).format('Do MMMM'),\n    location: title,\n    temperature: Math.round(data.the_temp),\n    weatherIcon: `https://www.metaweather.com/static/img/weather/${data.weather_state_abbr}.svg`,\n    weatherDescription: data.weather_state_name,\n});\n\nexport default getCurrentDayForecast;","const currentDayForecast = data => [\n    {\n        name: 'predictability',\n        value: data.predictability,\n        unit: '%',\n    },\n    {\n        name: 'humidity',\n        value: data.humidity,\n        unit: '%',\n    },\n    {\n        name: 'wind',\n        value: Math.round(data.wind_speed),\n        unit: 'km/h',\n    },\n    {\n        name: 'air pressure',\n        value: data.air_pressure,\n        unit: 'mb',\n    },\n    {\n        name: 'max temp',\n        value: Math.round(data.max_temp),\n        unit: '°C',\n    },\n    {\n        name: 'min temp',\n        value: Math.round(data.min_temp),\n        unit: '°C',\n    },\n];\n\nexport default currentDayForecast;","import moment from 'moment';\n\nconst getWeekday = date => moment(date).format('dddd').substring(0, 3);\n\nconst getUpcomingDaysForecast = data =>\n    data.slice(1).map(day => ({\n        imgUrl: day.weather_state_abbr,\n        temperature: Math.round(day.max_temp),\n        weekday: getWeekday(day.applicable_date),\n    }));\n\nexport default getUpcomingDaysForecast;","import { useState } from \"react\";\nimport axios from 'axios';\nimport getCurrentDayForecast from '../helpers/getCurrentDayForecast'\nimport getCurrentDayDetailedForecast from '../helpers/getCurrentDayDetailedForecast'\nimport getUpcomingDaysForecast from '../helpers/getUpcomingDaysForecast'\n\n\nconst BASE_URL = 'https://www.metaweather.com/api/location';\nconst CROSS_DOMAIN = 'https://the-ultimate-api-challenge.herokuapp.com';\nconst REQUEST_URL = `${CROSS_DOMAIN}/${BASE_URL}`;\n\nconst useForecast = () => {\n    \n    const [isError, setError] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n    const [forecast, setForecast] = useState(null);\n\n    const getWoeid = async (location) => {\n        const {data} = await axios(`${REQUEST_URL}/search`, { params: { query: location }});\n\n        if(!data || data.length === 0) {\n            setError('There is no such location');\n            setLoading(false);\n            return;\n        }\n\n        return data[0];\n\n    }\n\n    const getForecastData = async (woeid) =>{\n        const {data} = await axios(`${REQUEST_URL}/${woeid}`);\n\n        if(!data || data.length === 0) {\n            setError('Something went wrong');\n            setLoading(false);\n\n            return;\n        }\n\n        return data;\n    }\n\n    const submitRequest = async location => {\n        setLoading(true);\n        setError(false);\n\n        const response = await getWoeid(location);\n        if(!response?.woeid) return;\n\n        const data = await getForecastData(response.woeid);\n        if(!data) return;\n        console.log(data)\n        \n\n        collectForecastData(data);\n\n    }\n\n    const collectForecastData = (data) => {\n        const currentDay = getCurrentDayForecast(data.consolidated_weather[0], data.title);\n        const currentDayDetails = getCurrentDayDetailedForecast(data.consolidated_weather[0]);\n        const upcomingDays = getUpcomingDaysForecast(data.consolidated_weather);\n\n        setForecast({ currentDay, currentDayDetails, upcomingDays});\n        setLoading(false);\n    }\n\n\n\n    return{\n        isError, isLoading, forecast, submitRequest,\n    }\n}\n\nexport default useForecast;","import Page from './Page';\n\nexport default Page;","import React, { Fragment } from 'react';\n\nimport styles from './Page.module.css';\n\nimport Header from '../Header';\nimport Form from '../Form/Form';\nimport Error from '../Error';\nimport Loader from '../Loader/Loader';\nimport Forecast from '../Forecast';\n\nimport useForecast from '../../hooks/useForecast';\nconst Page = () => {\n    const {isError, isLoading, forecast, submitRequest} = useForecast();\n\n    const onSubmit = (value) => {\n        submitRequest(value);\n    }\n    return ( \n        <Fragment>\n            <Header />\n            {!forecast && (<div className={`${styles.box} position-relative`}>\n                {!isLoading && <Form submitSearch={onSubmit} />} \n                {isError && <Error message={isError}/>}\n                {isLoading && <Loader />}\n            </div>)}\n                {forecast && <Forecast forecast={forecast} />}\n\n            \n        </Fragment>\n     );\n}\n \nexport default Page;","import Page from \"./components/Page\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Page />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}